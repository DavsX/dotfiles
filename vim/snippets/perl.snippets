# #!/usr/bin/perl
snippet #!
	#!/usr/bin/env perl

# Hash Pointer
snippet .
	 =>
#Test::Class snippet
snippet subt
	sub ${1} : Test(no_plan) {
		my ($test) = @_;
		${0}
	}
# Function
snippet sub
	sub ${1} {
		my (${0}) = @_;
	}
# Method
snippet subs
	sub ${1} {
		my ($self${0}) = @_;
	}
# Conditional
snippet if
	if (${1}) {
		${0}
	}
# Conditional if..else
snippet ife
	if (${1}) {
		${2}
	}
	else {
		${0}
	}
# Conditional if..elsif..else
snippet ifee
	if (${1}) {
		${2}
	}
	elsif (${3}) {
		${4:# elsif...}
	}
	else {
		${0}
	}
snippet eif
	elsif (${1}) {
		${0}
	}
# Conditional One-line
snippet xif
	${1} if ${2};
# Unless conditional
snippet unless
	unless (${1}) {
		${0}
	}
# Unless conditional One-line
snippet xunless
	${1} unless ${2};
# Try/Except
snippet eval
	local $@;
	eval {
		${1}
	};
	if (my $e = $@) {
		${0}
	}
# While Loop
snippet wh
	while (${1}) {
		${0}
	}
# While Loop One-line
snippet xwh
	${1} while ${2};
# Foreach Loop
snippet for
	for my $${1} (@${2}) {
		${0}
	}
# Read File
snippet slurp
	my $${1:var} = do { local $/; open my $file, '<', "${2:file}"; <$file> };
	${0}
# Anonymous subroutine
snippet asub
	sub {
		${0}
	}

# Begin block
snippet begin
	BEGIN {
		${0}
	}

# Data::Dumper
snippet ddump
	use Data::Dumper
	local $Data::Dumper::Maxdepth = 2;
	say $Dumper \${0};

# complex regex
snippet qrx
	qr/
	     ${0:regex}
	/xms

#simpler regex
snippet qr/
	qr/${0:regex}/x
# map
snippet map
	map { ${0} } ${1} ;

# Moo has
snippet has
	has ${1} => (
		is       => '${2}',
		required => 1,
		lazy	 => 1,
		builder  => '${6}', ${0}
	);

# Test::Routine-style test
snippet subtest
	subtest '${1}' => sub {
		${0}
	};
