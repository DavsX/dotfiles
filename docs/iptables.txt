* tables
	* filter - block/allow
	* mangle - change headers
	* nat
	* raw
* chains
	* PREROUTING (nat, mangle, raw)
		* after a packet arrives on an interface
	* INPUT (mangle, filter)
		* before the packet is given to a local process
	* OUTPUT (raw, mangle, nat, filter)
		* after a packet is produced by a process
	* FORWARD (mangle, filter)
		* packets routed through the current host
	* POSTROUTING (nat, mangle)
		* packets leaving an interface

         /- PREROUTING ------ INPUT ----\
	     |              |               |
	NIC -|        FORWARD          LOCAL PROCESS
	     |          |                   |
	     \ POSTROUTING ----- OUTPUT ----/

* targets
	* ACCEPT
	* DROP
	* REJECT

* conntrack
	* NEW
	* ESTABLISHED
	* RELATED
	* INVALID
	* UNTRACKED
	* DNAT
	* SNAT

EXAMPLES (iptables -t filter === iptables)

* block IP
	* iptables -A INPUT -s $SOURCE_IP -j REJECT
* block protocol
	* iptables -A INPUT -p tcp -j DROP
* block SSH traffic
	* iptables -A INPUT -p tcp -m tcp --dport 22 -s $SOURCE_IP -j DROP
* block SSH and VNC
	* iptables -A INPUT -p tcp -m multiport --dropts 22,5901 -s $SOURCE_IP -j DROP
* allow existing connections
	* iptables -A INPUT -m conntrack --cstate REPLATED,ESTABLISHED -j ACCEPT
* drop invalid states
	* iptables -A INPUT -m conntrack --cstate INVALID -j DROP
* change default policy
	* iptables -P INPUT DROP
* select interface
	* iptables -A INPUT -i lo -j ACCEPT
* negate conditions
	* ... -p tcp -m multiport ! --dports 22,80,443 -j DROP
* match TCP flags
	* from ALL flags FIN,PSH,URG are set
		* -p tcp -m tcp --tcp-flags ALL FIN,PSH,URG -j DROP
	* from SYN,FIN both SYN and FIN are set
		* -p tcp -m tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
* new packets with other than SYN set
	* -p tcp -m conntrack --cstate NEW -m tcp ! --tcp-flags FIN,SYN,RST,ACK SYN -j DROP
* limit ICMP
	* -p icmp -m limit --limit 1/sec --limit-burst 1 -j ACCEPT
* limit number of new SSH connections from an IP by time
	* first, create a counter
	* -p tcp -m tcp --dport 22 -m conntrack --cstate NEW -m recent --set --name SSHLIMIT --rsource
	* next, apply rule (max 5 / 180 sec)
	* -p tcp -m tcp --dport 22 -m conntrack --cstate NEW -m recent --set --name SSHLIMIT --update --seconds 180 --hitcount 5 --name SSH --rsource -j DROP
* block traffic based on owner
	* -A OUTPUT -d $DEST_IP -m owner --uid-owner $USER -j DROP
	(--uid-owner or --git-owner)
	owner module is valid only in OUTPUT,POSTROUTING
* chains
	* create custom chain
		* -N $CHAIN
	* add rules to custom chain
		* -A $CHAIN -s IP/16 -j ACCEPT
		* -A $CAIN -j DROP
	* send packet to chain
		* -p tcp -m tcp --dport 22 -j $CHAIN
	* delete chain
		* -X $CHAIN
* LOG target
	* non-terminating; to log packet before drop
	* -A $pattern -j LOG
	* -A $pattern -j DROP
